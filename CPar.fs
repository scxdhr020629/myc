// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | QUES
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | ADDADD
  | MINUSMINUS
  | ADDASS
  | MINUSASS
  | TIMESASS
  | DIVASS
  | MODASS
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | UNTIL
  | FOR
  | IN
  | RANGE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_QUES
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_ADDADD
    | TOKEN_MINUSMINUS
    | TOKEN_ADDASS
    | TOKEN_MINUSASS
    | TOKEN_TIMESASS
    | TOKEN_DIVASS
    | TOKEN_MODASS
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_FOR
    | TOKEN_IN
    | TOKEN_RANGE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | QUES  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | ADDADD  -> 27 
  | MINUSMINUS  -> 28 
  | ADDASS  -> 29 
  | MINUSASS  -> 30 
  | TIMESASS  -> 31 
  | DIVASS  -> 32 
  | MODASS  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | DO  -> 44 
  | UNTIL  -> 45 
  | FOR  -> 46 
  | IN  -> 47 
  | RANGE  -> 48 
  | CSTSTRING _ -> 49 
  | NAME _ -> 50 
  | CSTINT _ -> 51 
  | CSTBOOL _ -> 52 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_QUES 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_ADDADD 
  | 28 -> TOKEN_MINUSMINUS 
  | 29 -> TOKEN_ADDASS 
  | 30 -> TOKEN_MINUSASS 
  | 31 -> TOKEN_TIMESASS 
  | 32 -> TOKEN_DIVASS 
  | 33 -> TOKEN_MODASS 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_DO 
  | 45 -> TOKEN_UNTIL 
  | 46 -> TOKEN_FOR 
  | 47 -> TOKEN_IN 
  | 48 -> TOKEN_RANGE 
  | 49 -> TOKEN_CSTSTRING 
  | 50 -> TOKEN_NAME 
  | 51 -> TOKEN_CSTINT 
  | 52 -> TOKEN_CSTBOOL 
  | 55 -> TOKEN_end_of_input
  | 53 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Exprs 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs1 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Type 
    | 85 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 55 
let _fsyacc_tagOfErrorTerminal = 53

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | QUES  -> "QUES" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | ADDADD  -> "ADDADD" 
  | MINUSMINUS  -> "MINUSMINUS" 
  | ADDASS  -> "ADDASS" 
  | MINUSASS  -> "MINUSASS" 
  | TIMESASS  -> "TIMESASS" 
  | DIVASS  -> "DIVASS" 
  | MODASS  -> "MODASS" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | FOR  -> "FOR" 
  | IN  -> "IN" 
  | RANGE  -> "RANGE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | ADDADD  -> (null : System.Object) 
  | MINUSMINUS  -> (null : System.Object) 
  | ADDASS  -> (null : System.Object) 
  | MINUSASS  -> (null : System.Object) 
  | TIMESASS  -> (null : System.Object) 
  | DIVASS  -> (null : System.Object) 
  | MODASS  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | RANGE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 17us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 93us; 54us; 95us; 54us; 102us; 54us; 106us; 54us; 110us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 113us; 15us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 77us; 93us; 94us; 95us; 96us; 102us; 103us; 106us; 107us; 110us; 111us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 112us; 74us; 114us; 54us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 79us; 80us; 84us; 85us; 89us; 90us; 91us; 92us; 93us; 48us; 95us; 48us; 100us; 101us; 102us; 48us; 104us; 105us; 106us; 48us; 108us; 109us; 110us; 48us; 120us; 121us; 122us; 123us; 124us; 125us; 126us; 127us; 128us; 129us; 130us; 131us; 133us; 158us; 136us; 137us; 138us; 139us; 159us; 141us; 160us; 142us; 161us; 143us; 162us; 144us; 163us; 145us; 164us; 146us; 165us; 147us; 166us; 148us; 167us; 149us; 168us; 150us; 169us; 151us; 170us; 152us; 171us; 153us; 174us; 155us; 175us; 156us; 177us; 154us; 188us; 157us; 191us; 158us; 54us; 65535us; 37us; 117us; 40us; 117us; 43us; 117us; 50us; 117us; 57us; 117us; 58us; 117us; 61us; 117us; 62us; 117us; 64us; 117us; 65us; 117us; 69us; 117us; 70us; 117us; 73us; 117us; 74us; 117us; 76us; 117us; 79us; 117us; 84us; 117us; 89us; 117us; 91us; 117us; 93us; 117us; 95us; 117us; 100us; 117us; 102us; 117us; 104us; 117us; 106us; 117us; 108us; 117us; 110us; 117us; 120us; 117us; 122us; 117us; 124us; 117us; 126us; 117us; 128us; 117us; 130us; 117us; 133us; 117us; 136us; 117us; 138us; 117us; 159us; 117us; 160us; 117us; 161us; 117us; 162us; 117us; 163us; 117us; 164us; 117us; 165us; 117us; 166us; 117us; 167us; 117us; 168us; 117us; 169us; 117us; 170us; 117us; 171us; 117us; 174us; 117us; 175us; 117us; 177us; 118us; 188us; 117us; 191us; 117us; 55us; 65535us; 37us; 119us; 40us; 119us; 43us; 119us; 50us; 119us; 57us; 119us; 58us; 119us; 61us; 119us; 62us; 119us; 64us; 119us; 65us; 119us; 69us; 119us; 70us; 119us; 73us; 119us; 74us; 119us; 76us; 119us; 79us; 119us; 84us; 119us; 89us; 119us; 91us; 119us; 93us; 119us; 95us; 119us; 100us; 119us; 102us; 119us; 104us; 119us; 106us; 119us; 108us; 119us; 110us; 119us; 120us; 119us; 122us; 119us; 124us; 119us; 126us; 119us; 128us; 119us; 130us; 119us; 133us; 119us; 136us; 119us; 138us; 119us; 159us; 119us; 160us; 119us; 161us; 119us; 162us; 119us; 163us; 119us; 164us; 119us; 165us; 119us; 166us; 119us; 167us; 119us; 168us; 119us; 169us; 119us; 170us; 119us; 171us; 119us; 174us; 119us; 175us; 119us; 177us; 119us; 185us; 187us; 188us; 119us; 191us; 119us; 57us; 65535us; 37us; 116us; 40us; 116us; 43us; 116us; 50us; 116us; 57us; 116us; 58us; 116us; 61us; 116us; 62us; 116us; 64us; 116us; 65us; 116us; 69us; 116us; 70us; 116us; 73us; 116us; 74us; 116us; 76us; 116us; 79us; 116us; 84us; 116us; 89us; 116us; 91us; 116us; 93us; 116us; 95us; 116us; 100us; 116us; 102us; 116us; 104us; 116us; 106us; 116us; 108us; 116us; 110us; 116us; 120us; 116us; 122us; 116us; 124us; 116us; 126us; 116us; 128us; 116us; 130us; 116us; 133us; 116us; 136us; 116us; 138us; 116us; 159us; 116us; 160us; 116us; 161us; 116us; 162us; 116us; 163us; 116us; 164us; 116us; 165us; 116us; 166us; 116us; 167us; 116us; 168us; 116us; 169us; 116us; 170us; 116us; 171us; 116us; 174us; 116us; 175us; 116us; 177us; 115us; 179us; 180us; 182us; 183us; 185us; 186us; 188us; 116us; 191us; 116us; 1us; 65535us; 133us; 134us; 2us; 65535us; 133us; 190us; 191us; 192us; 55us; 65535us; 37us; 176us; 40us; 176us; 43us; 176us; 50us; 176us; 57us; 176us; 58us; 176us; 61us; 176us; 62us; 176us; 64us; 176us; 65us; 176us; 69us; 176us; 70us; 176us; 73us; 176us; 74us; 176us; 76us; 176us; 79us; 176us; 84us; 176us; 89us; 176us; 91us; 176us; 93us; 176us; 95us; 176us; 100us; 176us; 102us; 176us; 104us; 176us; 106us; 176us; 108us; 176us; 110us; 176us; 120us; 176us; 122us; 176us; 124us; 176us; 126us; 176us; 128us; 176us; 130us; 176us; 133us; 176us; 136us; 176us; 138us; 176us; 159us; 176us; 160us; 176us; 161us; 176us; 162us; 176us; 163us; 176us; 164us; 176us; 165us; 176us; 166us; 176us; 167us; 176us; 168us; 176us; 169us; 176us; 170us; 176us; 171us; 176us; 174us; 176us; 175us; 176us; 177us; 176us; 185us; 176us; 188us; 176us; 191us; 176us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 51us; 55us; 60us; 76us; 83us; 138us; 193us; 249us; 307us; 309us; 312us; 368us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 36us; 1us; 23us; 15us; 24us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 3us; 28us; 36us; 37us; 17us; 28us; 36us; 37us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 28us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 1us; 28us; 2us; 28us; 36us; 1us; 28us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 2us; 29us; 38us; 16us; 29us; 38us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 29us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 2us; 30us; 31us; 2us; 30us; 31us; 1us; 30us; 1us; 30us; 15us; 30us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 15us; 31us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 31us; 1us; 31us; 4us; 32us; 33us; 34us; 35us; 1us; 32us; 15us; 32us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 32us; 15us; 32us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 3us; 33us; 34us; 35us; 3us; 33us; 34us; 35us; 3us; 33us; 34us; 35us; 3us; 33us; 34us; 35us; 17us; 33us; 34us; 35us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 16us; 34us; 35us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 34us; 1us; 34us; 1us; 35us; 15us; 35us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 11us; 39us; 42us; 43us; 44us; 45us; 46us; 47us; 65us; 66us; 72us; 75us; 10us; 39us; 42us; 43us; 44us; 45us; 46us; 47us; 65us; 66us; 75us; 1us; 40us; 2us; 40us; 69us; 1us; 41us; 1us; 42us; 15us; 42us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 43us; 15us; 43us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 44us; 15us; 44us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 45us; 15us; 45us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 46us; 15us; 46us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 47us; 15us; 47us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 2us; 48us; 71us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 15us; 49us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 50us; 15us; 50us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 1us; 51us; 15us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 67us; 14us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 67us; 15us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 75us; 16us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 67us; 78us; 79us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 68us; 2us; 69us; 72us; 1us; 69us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 268us; 270us; 272us; 288us; 290us; 292us; 294us; 296us; 312us; 314us; 316us; 321us; 323us; 339us; 341us; 357us; 359us; 361us; 363us; 365us; 369us; 373us; 377us; 381us; 399us; 401us; 403us; 406us; 423us; 425us; 427us; 429us; 445us; 447us; 449us; 451us; 453us; 455us; 467us; 478us; 480us; 483us; 485us; 487us; 503us; 505us; 521us; 523us; 539us; 541us; 557us; 559us; 575us; 577us; 593us; 596us; 598us; 600us; 602us; 604us; 620us; 622us; 638us; 640us; 656us; 672us; 688us; 704us; 720us; 736us; 752us; 768us; 784us; 800us; 816us; 832us; 848us; 863us; 879us; 895us; 911us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 952us; 954us; 956us; 958us; 960us; 962us; 964us; 967us; 969us; 971us; 974us; 976us; 978us; 981us; 983us; 986us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; |]
let _fsyacc_action_rows = 200
let _fsyacc_actionTableElements = [|3us; 16386us; 34us; 199us; 37us; 198us; 42us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 34us; 199us; 37us; 198us; 42us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 24us; 14us; 50us; 12us; 3us; 32768us; 1us; 16us; 24us; 14us; 50us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 24us; 14us; 50us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 24us; 14us; 50us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 51us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 50us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 34us; 199us; 37us; 198us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 34us; 199us; 37us; 198us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 34us; 199us; 37us; 198us; 0us; 16401us; 19us; 16403us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 34us; 199us; 36us; 56us; 37us; 198us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 1us; 32768us; 4us; 39us; 0us; 16402us; 19us; 16403us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 34us; 199us; 36us; 56us; 37us; 198us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16404us; 1us; 32768us; 7us; 43us; 19us; 16403us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 34us; 199us; 36us; 56us; 37us; 198us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 35us; 65us; 0us; 16407us; 15us; 32768us; 7us; 49us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 0us; 16408us; 12us; 32768us; 1us; 177us; 7us; 51us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16409us; 15us; 32768us; 7us; 53us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 1us; 57us; 1us; 32768us; 1us; 58us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 2us; 62us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 15us; 32768us; 2us; 61us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 56us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 1us; 32768us; 35us; 64us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 56us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16412us; 1us; 32768us; 1us; 69us; 1us; 32768us; 1us; 70us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 2us; 74us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 15us; 32768us; 2us; 73us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 56us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 68us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16413us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 2us; 32768us; 43us; 78us; 45us; 83us; 1us; 32768us; 1us; 79us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 2us; 81us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 1us; 32768us; 7us; 82us; 0us; 16414us; 1us; 32768us; 1us; 84us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 2us; 86us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 1us; 32768us; 7us; 87us; 0us; 16415us; 2us; 32768us; 1us; 89us; 50us; 97us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 7us; 91us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 7us; 93us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 1us; 32768us; 2us; 95us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16416us; 1us; 32768us; 47us; 98us; 1us; 32768us; 48us; 99us; 1us; 32768us; 1us; 100us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 16us; 32768us; 2us; 102us; 8us; 104us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16417us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 16us; 32768us; 2us; 106us; 8us; 108us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16418us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 15us; 32768us; 2us; 110us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 17us; 32768us; 1us; 177us; 3us; 37us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 36us; 55us; 38us; 197us; 39us; 138us; 40us; 140us; 41us; 50us; 43us; 67us; 44us; 76us; 46us; 88us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 10us; 16423us; 2us; 184us; 5us; 188us; 9us; 120us; 27us; 172us; 28us; 173us; 29us; 122us; 30us; 124us; 31us; 126us; 32us; 128us; 33us; 130us; 9us; 16423us; 5us; 188us; 9us; 120us; 27us; 172us; 28us; 173us; 29us; 122us; 30us; 124us; 31us; 126us; 32us; 128us; 33us; 130us; 0us; 16424us; 1us; 16424us; 2us; 178us; 0us; 16425us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16426us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16427us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16428us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16429us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16430us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 14us; 16431us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 1us; 16455us; 1us; 133us; 11us; 16460us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 1us; 32768us; 2us; 135us; 0us; 16432us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16433us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 13us; 16434us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 0us; 16435us; 3us; 16436us; 24us; 161us; 25us; 162us; 26us; 163us; 3us; 16437us; 24us; 161us; 25us; 162us; 26us; 163us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 9us; 16441us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 9us; 16442us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 9us; 16443us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 9us; 16444us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 9us; 16445us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 9us; 16446us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 16447us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 12us; 16448us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 14us; 32768us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 15us; 32768us; 11us; 175us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 14us; 16451us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 15us; 32768us; 6us; 189us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 15us; 16462us; 8us; 191us; 12us; 174us; 14us; 171us; 15us; 170us; 16us; 164us; 17us; 165us; 18us; 166us; 19us; 167us; 20us; 168us; 21us; 169us; 22us; 159us; 23us; 160us; 24us; 161us; 25us; 162us; 26us; 163us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16449us; 0us; 16450us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16452us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16453us; 3us; 32768us; 1us; 182us; 24us; 185us; 50us; 181us; 1us; 16454us; 5us; 188us; 0us; 16455us; 3us; 32768us; 1us; 182us; 24us; 185us; 50us; 181us; 2us; 32768us; 2us; 184us; 5us; 188us; 0us; 16456us; 8us; 32768us; 1us; 177us; 10us; 179us; 23us; 195us; 24us; 185us; 38us; 197us; 50us; 181us; 51us; 193us; 52us; 194us; 1us; 16457us; 5us; 188us; 0us; 16458us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16459us; 0us; 16461us; 11us; 32768us; 1us; 177us; 10us; 179us; 13us; 136us; 23us; 195us; 24us; 185us; 38us; 197us; 39us; 138us; 40us; 140us; 50us; 132us; 51us; 193us; 52us; 194us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 51us; 196us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 98us; 100us; 101us; 121us; 122us; 124us; 144us; 145us; 146us; 148us; 149us; 165us; 166us; 179us; 180us; 196us; 197us; 198us; 200us; 202us; 214us; 226us; 242us; 258us; 276us; 294us; 296us; 314us; 332us; 333us; 335us; 337us; 349us; 361us; 377us; 393us; 411us; 429us; 430us; 448us; 451us; 453us; 465us; 481us; 483us; 484us; 486us; 498us; 514us; 516us; 517us; 520us; 532us; 548us; 560us; 576us; 594us; 596us; 614us; 615us; 617us; 619us; 621us; 633us; 650us; 668us; 669us; 681us; 698us; 716us; 717us; 729us; 745us; 763us; 764us; 765us; 766us; 767us; 778us; 788us; 789us; 791us; 792us; 804us; 819us; 831us; 846us; 858us; 873us; 885us; 900us; 912us; 927us; 939us; 954us; 956us; 968us; 970us; 971us; 983us; 984us; 996us; 1010us; 1011us; 1015us; 1019us; 1020us; 1021us; 1022us; 1032us; 1042us; 1052us; 1062us; 1072us; 1082us; 1094us; 1107us; 1122us; 1138us; 1153us; 1169us; 1185us; 1197us; 1209us; 1221us; 1233us; 1245us; 1257us; 1269us; 1281us; 1293us; 1305us; 1317us; 1329us; 1341us; 1342us; 1343us; 1355us; 1367us; 1368us; 1380us; 1381us; 1385us; 1387us; 1388us; 1392us; 1395us; 1396us; 1405us; 1407us; 1408us; 1420us; 1421us; 1422us; 1434us; 1435us; 1436us; 1437us; 1439us; 1440us; 1441us; 1442us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 8us; 10us; 12us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 5us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16449us; 16450us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 16459us; 16461us; 65535us; 16463us; 16464us; 16465us; 65535us; 16466us; 16467us; 16468us; 16469us; |]
let _fsyacc_reductions ()  =    [| 
# 495 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 504 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "CPar.fsy"
                                                               Prog _1 
                   )
# 47 "CPar.fsy"
                 : Absyn.program));
# 515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               [] 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdecs));
# 525 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdecs));
# 537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdec));
# 548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               _1 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdec));
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 76 "CPar.fsy"
                 : 'gentype_Vardec));
# 571 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 87 "CPar.fsy"
                 : 'gentype_Vardesc));
# 582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 593 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               _2                                      
                   )
# 97 "CPar.fsy"
                 : 'gentype_Vardesc));
# 604 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 615 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 627 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Fundec));
# 640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 108 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 108 "CPar.fsy"
                 : 'gentype_Fundec));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               [] 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 664 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               _1 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 675 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               [_1]     
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 686 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               Block _2 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Block));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               [] 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 719 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 731 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 130 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 743 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 754 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               _1 
                   )
# 135 "CPar.fsy"
                 : 'gentype_Stmt));
# 765 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 776 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Return None          
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 786 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 797 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               _1                   
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 808 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 821 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 833 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               DoWhile(_2,_5) 
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 845 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               DoUntil(_2,_5) 
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 857 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                                          For(_3,_5,_7,_9)     
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                                                               ForInRange1(_2,_6,_8) 
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                                                               ForInRange2(_2,_6,_8,_10) 
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 898 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _6 = parseState.GetInput(6) :?> 'gentype_Expr in
            let _8 = parseState.GetInput(8) :?> 'gentype_Expr in
            let _10 = parseState.GetInput(10) :?> 'gentype_Expr in
            let _12 = parseState.GetInput(12) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                                                               ForInRange3(_2,_6,_8,_10,_12) 
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 913 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 926 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 938 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 950 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Access _1           
                   )
# 160 "CPar.fsy"
                 : 'gentype_Expr));
# 961 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               _1                  
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 995 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               AddAss(_1,_3)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1007 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               MinusAss(_1,_3)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1019 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               TimesAss(_1,_3)      
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1031 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               DivAss(_1,_3)      
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1043 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               ModAss(_1,_3)      
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1055 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1067 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1078 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1099 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1111 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1123 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1135 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1147 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1159 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1171 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1183 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1195 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1207 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1219 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1231 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1243 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1255 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               AddAdd(_1)      
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1266 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               MinusMinus(_1)      
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1277 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Bino(_1,_3,_5)
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1290 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               CstI _1             
                   )
# 199 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1301 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               _2                  
                   )
# 200 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Addr _2             
                   )
# 201 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1323 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               AccVar _1           
                   )
# 205 "CPar.fsy"
                 : 'gentype_Access));
# 1334 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               _2                  
                   )
# 206 "CPar.fsy"
                 : 'gentype_Access));
# 1345 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 207 "CPar.fsy"
                 : 'gentype_Access));
# 1356 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 208 "CPar.fsy"
                 : 'gentype_Access));
# 1367 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 209 "CPar.fsy"
                 : 'gentype_Access));
# 1379 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               []       
                   )
# 213 "CPar.fsy"
                 : 'gentype_Exprs));
# 1389 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               _1       
                   )
# 214 "CPar.fsy"
                 : 'gentype_Exprs));
# 1400 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               [_1]     
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1411 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 219 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1423 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Const));
# 1434 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Const));
# 1445 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               - _2     
                   )
# 225 "CPar.fsy"
                 : 'gentype_Const));
# 1456 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               -1       
                   )
# 226 "CPar.fsy"
                 : 'gentype_Const));
# 1466 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               TypI     
                   )
# 230 "CPar.fsy"
                 : 'gentype_Type));
# 1476 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               TypC     
                   )
# 231 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1487 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 56;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
